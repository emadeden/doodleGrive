b'Docker Commands:\n# this will be comment \n\n1- docker --version\n2- service docker start\n3- service docker restart\n4- service docker stop\n5- docker images \n# show all running containers \n6- docker ps  \n# list running and stoped container (history) \n7- docker ps -a \n# This will start image container and map TCP port 80 in the container to port 8080 on the Docker host\n8- docker container run -dt -p 8080:80 image_name\n9- docker container run -dt -p 8080:80 --name container_name image_name \n10- docker container run -dt -p 8080:80 --name container_name --net network_name image_name \n# here we specific static ip for this container  \n11- docker container run -dt -p 8080:80 --name container_name --net network_name --ip ip_address image_name \n# pull image from docker hub \n12- docker pull image_name \n13- docker stop container_id or container_name\n# restart stoped container \n14- docker start container_id or container_name\n15- docker logs container_id or container_name \n# get the terminal of the runing container \n16- docker exec -it container_name or container_id /bin/bash \n# this command will create new image from container where test01 is stoped container and test02 is the name of the image i want to create from the container \n17- docker commit test01 test02 \n\n# this container already runing but will configure it to allways restart unless it stopped\n18- docker update --restart unless-stopped container_name or container_id\n\n# this will start this container and configure it to allways restart unless it stopped\n19- docker run -d --restart unless-stopped image_name or image_id \n\n20- docker network ls \n\n# create network with subnet=192.168.20.3/24\n21- docker network create --subnet=192.168.20.3/24 network_name\n\n22- docker inspect container_name or container_id\n23- docker network inspect network_name or network_id \n24- docker rm container_name or container_id\n25- docker network rm network_name or network_id \n\n\n\n\n\n\n\n\n\n\n\n\n\nnotic: \nto download image to desktop:\ndocker save -o /home/emad/Desktop/image_copy.tar hello-world  (hello-world is the image name and image_copy.tar is the directoy )\n\nand to load this image to docker images do this:\ndocker load -i image_copy.tar\nand then test docker images \n\n\n\n\n\n\n\nremember python container id: 2b041d3544bd ( in this container i installed django and termcolor )\n\n\n\n' mm 